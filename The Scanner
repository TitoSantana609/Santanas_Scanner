import tkinter as tk
import subprocess
import requests

def amass_scan():
    domain = domain_entry.get()  # Get the domain entered in the entry field
    try:
        # Run the Amass command with the "enum" subcommand and capture the output
        result = subprocess.run(['amass', 'enum', '-d', domain], stdout=subprocess.PIPE, text=True)
        domains = result.stdout.split('\n')
        
        # Initialize lists to store alive and unreachable domains
        alive_domains = []
        unreachable_domains = []

        # Loop through discovered domains and make HTTP requests
        for domain in domains:
            if domain:
                try:
                    response = requests.get(f"http://{domain}", timeout=5)
                    if response.status_code < 400:
                        alive_domains.append(domain)
                except requests.RequestException:
                    unreachable_domains.append(domain)

        # Display the results in respective text widgets
        output_text.config(state='normal')
        output_text.delete(1.0, tk.END)
        output_text.insert(tk.END, "\n".join(unreachable_domains))
        output_text.config(state='disabled')

        alive_text.config(state='normal')
        alive_text.delete(1.0, tk.END)
        alive_text.insert(tk.END, "\n".join(alive_domains))
        alive_text.config(state='disabled')

    except FileNotFoundError:
        output_text.config(state='normal')
        output_text.delete(1.0, tk.END)
        output_text.insert(tk.END, "Amass tool not found. Please install Amass.")
        output_text.config(state='disabled')

root = tk.Tk()
root.title("Santana's Scanner")

# Entry field for entering the domain
domain_label = tk.Label(root, text="Enter Domain:")
domain_label.pack()
domain_entry = tk.Entry(root)
domain_entry.pack()

# Button to initiate the Amass scan
scan_button = tk.Button(root, text="Scan Domain", command=amass_scan)
scan_button.pack()

# Text widget to display unreachable domains
output_text = tk.Text(root, height=10, width=40)
output_text.config(state='disabled')  # Initially, text widget is not editable
output_text.pack()

# Text widget to display alive domains
alive_text = tk.Text(root, height=10, width=40)
alive_text.config(state='disabled')  # Initially, text widget is not editable
alive_text.pack()

root.mainloop()
